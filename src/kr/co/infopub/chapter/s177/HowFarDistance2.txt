01: package kr.co.infopub.chapter.s177;
02: import java.io.BufferedReader;
03: import java.io.FileNotFoundException;
04: import java.io.FileReader;
05: import java.io.IOException;
06: import org.json.JSONArray;
07: import org.json.JSONObject;
08: public class HowFarDistance2 {
09: 	private String json="";
10: 	public HowFarDistance2 (){
11: 	}
12: 	public  void makeDistances(String fname){
13: 		StringBuffer sb=new StringBuffer();
14: 		try {
15: 			BufferedReader br=new BufferedReader(new FileReader(fname));
16: 			String msg="";
17: 			while((msg=br.readLine())!=null){
18: 				if(!msg.trim().equals("")){
19: 					//stu+=msg.trim();
20: 					sb.append(msg.trim());
21: 				}
22: 			}
23: 			
24: 		} catch (FileNotFoundException e) {
25: 			System.out.println(e);
26: 		} catch (IOException e) {
27: 			System.out.println(e);
28: 		}
29: 		json=sb.toString();
30: 	}
31: 	public  double [][] getLatLng(){
32: 		JSONObject jObject = new JSONObject(json);
33: 		JSONArray loc = jObject.getJSONArray("loc");
34: 		
35: 		double [][]latlng=new double[loc.length()][2];
36: 		for(int i=0; i<loc.length(); i++) {
37: 			JSONObject local = loc.getJSONObject(i);
38: 			int marknum=local.getInt("marknum");
39: 			String markerX = local.getString("markerX");
40: 			String markerY = local.getString("markerY");
41: 			latlng[i][0]=Double.parseDouble(markerX.trim());
42: 			latlng[i][1]=Double.parseDouble(markerY.trim());
43: 		}	
44: 		return latlng;
45: 	}
46: 	public double howfar(){
47: 		double [][]latlng=getLatLng();  //2차원 배열을 얻어옴
48: 		double tot=0.0;   //산책한 총 거리 
49: 		for (int i = 0; i < latlng.length-1; i++) {
50: 			double distance=HaversineDistance.distance(
51: 					latlng[i][0], latlng[i][1], latlng[i+1][0], latlng[i+1][1]);
52: 			tot+=distance;
53: 			String ss=String.format("(%f,%f)-(%f,%f) 사이 거리 : %f",
54: 					latlng[i][0], latlng[i][1], latlng[i+1][0], latlng[i+1][1],
55: 					distance);
56: 			System.out.println(ss);
57: 		}
58: 		return tot;
59: 	}
60: 	public static double howfarDistance(double [][]latlng){
61: 		double tot=0.0;   //산책한 총 거리 
62: 		for (int i = 0; i < latlng.length-1; i++) {
63: 			double distance=HaversineDistance.distance(
64: 					latlng[i][0], latlng[i][1], latlng[i+1][0], latlng[i+1][1]);
65: 			tot+=distance;
66: 			String ss=String.format("(%f,%f)-(%f,%f) 사이 거리 : %f",
67: 					latlng[i][0], latlng[i][1], latlng[i+1][0], latlng[i+1][1],
68: 					distance);
69: 			System.out.println(ss);
70: 		}
71: 		return tot;
72: 	}
73: }
